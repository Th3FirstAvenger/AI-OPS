# playwright install firefox
import time
from typing import Tuple

from playwright.sync_api import sync_playwright, PlaywrightContextManager


class ExploitDB:

    def __init__(self):
        self.__base_url = 'https://www.exploit-db.com/'
        self.__pw_context = None
        self.__browser = None
        self.__context = None
        self.__page = None
        self.__search = None

    def __enter__(self):
        self.__pw_context = sync_playwright().start()
        self.init()
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        self.close()
        if exc_type is not None:
            raise RuntimeError("Error in the ExploitDB.") from exc_val
        return False

    def init(self):
        self.__browser = self.__pw_context.firefox.launch()
        self.__context = self.__browser.new_context()
        self.__page = self.__context.new_page()
        self.__page.goto(self.__base_url)
        self.__page.wait_for_selector("div[id=exploits-table_filter]")
        self.__search = self.__page.locator("div[id=exploits-table_filter] input[type='search']")

    def close(self):
        if self.__page:
            self.__page.close()
        if self.__context:
            self.__context.close()
        if self.__browser:
            self.__browser.close()
        if self.__pw_context:
            self.__pw_context.stop()

    def search(self, query: str) -> list[Tuple]:
        print(f'Searching {query}')

"""
url = 'https://www.exploit-db.com/'

with sync_playwright() as pw:
    # Open ExploitDB
    browser = pw.firefox.launch()
    context = browser.new_context()
    page = context.new_page()

    page.goto(url)
    page.wait_for_selector("div[id=exploits-table_filter]")
    search_input = page.locator("div[id=exploits-table_filter] input[type='search']")

    start = time.time()

    # Search
    search_input.fill('phpmyadmin')
    search_input.press("Enter")
    page.wait_for_selector("table#exploits-table tbody tr")

    # Get results
    results = []
    rows_count = page.locator("table#exploits-table tbody tr").count()

    for i in range(rows_count):
        # fifth td contains title and url
        fifth_column = page.locator(f"table#exploits-table tbody tr:nth-child({i + 1}) td:nth-child(5) a")

        if fifth_column.count() > 0:
            title = fifth_column.inner_text()
            url = fifth_column.get_attribute("href")
            results.append((title, url))

    for title, url in results:
        print(f"Title: {title}, URL: {url}")

    browser.close()

print(f'{time.time()-start}:.2f')
"""


if __name__ == "__main__":
    with ExploitDB() as exp_db:
        exp_db.search('something')
