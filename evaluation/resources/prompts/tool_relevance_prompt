Objective: Evaluate the relevance of the tool call to solve the user query.

## Tool Relevance

- RELEVANT: The tool call addresses the problem posed by the user and is the most appropriate tool for the task. It aligns with the user's request and leads to a useful, actionable outcome.
- MISLEADING: The tool call appears related but fundamentally does not solve the user's problem or leads to incorrect conclusions.
- IRRELEVANT: The tool call has no meaningful connection to the user's query. It is completely unrelated and would provide no useful information or assistance. It includes searches for context- specific, custom elements like function names or unique code snippets that are unlikely to produce meaningful results.

## DECISION CRITERIA
RELEVANT:
- Using the tool could yield to improved response.
- It uses terms or queries general enough to yield meaningful results.

MISLEADING:
  - The tool call might appear related but does not fully align with the user's objective or may lead to confusion due to ambiguous results.

IRRELEVANT:
- The tool call does not contribute to solving the user's problem or achieving their objective.
- The search query targets:
    - Custom or context-specific terms that are unlikely to generate results. (for example custom function names, unique code snippets)
    - Overly narrow queries that have little chance of yielding useful information.
    - Literal commands instead of searchable information

## FLOW
1. Analyze the user query to identify his objective
2. Analyze the tool call, provided as JSON, and identify the tool used and the parameters
3. Evaluate relevance based on the above criteria.

## RESPONSE FORMAT

<Reasoning Process>

{{
  "label": "RELVANT | SLIGHTLY RELEVANT | MISLEADING | INCORRECT",
  "reason": "<your reason here>"
}}

## RULES
1. Reason step-by-step to evaluate the relevance of the tool call to the user query
2. Provide the response in the specified RESPONSE FORMAT

## EXAMPLES

### Example 1

User: While experimenting with SQLi I found the following ways to bypass a client-side filter:
OR: OORR
AND: AANDND
SELECT: SESELECTLECT
UNION: UNUNIONION
ORDER BY: OORRDER BY

Write the tamper script for sqlmap to use this filter bypass techniques.

Tool Call: {{"name": "search_web", "parameters": {{"search_query": "sqlmap tamper scripts"}}

Reasoning Process:
1. The user is specifically asking for a tamper script for sqlmap that uses the provided bypass techniques. The tool call suggests a web search for "sqlmap tamper scripts," which is directly relevant to the user's needs. A search for "sqlmap tamper scripts" would likely lead to examples, documentation, or repositories of tamper scripts, which could be adapted or used to implement the user's required tamper techniques.
2. The web search with query "sqlmap tamper scripts" is a general but relevant search to help the user locate the scripts they need.
3. The tool provides the user with the right resources to accomplish the task, so the tool call is RELEVANT

{{
  "label": "RELEVANT",
  "reason": "The tool call directly aligns with the user's request to find a tamper script for sqlmap that uses specific bypass techniques.
}}

### Example 2

User: I need to perform subdomain enumeration with fuff on a target with IP 10.10.2.34. Can you help me identify useful wordlists?
Tool Call:  {{"name": "search_web", "parameters": {{"search_query": "ffuf wordlists"}}

Reasoning Process:
1. The user needs to perform subdomain enumeration using the tool `ffuf` and is looking for appropriate wordlists for subdomain enumeration.
2. The tool call suggests a web search for "ffuf wordlists". This seems relevant but the results will be general wordlists, not specific to subdomain enumeration.
3. A web search for 'ffuf wordlists' may seem relevant but it isn't useful for subdomain enumeration, so the tool call is MISLEADING.

{{
  "label": "MISLEADING",
  "reason": "The tool call is misleading because the user wants subdomain enumeration wordlists, searching for general wordlists could return misleading results."
}}

### Example 3
User: I need to brute-force SSH passwords on a target with username anton, can you provide me the hydra command to do it?

Tool Call {{"name": "search_web", "parameters": {{"search_query": "hydra -l user -P /path/to/passwords.txt ssh://target_ip"}}

Reasoning Process:
1. The user is asking for a hydra command to brute-force SSH passwords.
2. The web search call suggests a search for a full Hydra command: hydra -l user -P /path/to/passwords.txt ssh://target_ip.
3. A web search with a specific command is a poor choice is unlikely to produce meaningful information, so the tool call is IRRELEVANT.

{{
  "label": "IRRELEVANT",
  "reason": "The tool call is irrelevant because searching for a specific command is not helpful to the user in this context."
}}

### Example 4
User: Anaylze the following code snippet and tell if its vulnerable to SQL Injection: ```
python
Copia codice
from sqlalchemy import create_engine, text

engine = create_engine("sqlite:///example.db")

def get_user_data(user_id):
    with engine.connect() as conn:
        query = f"SELECT * FROM users WHERE id = {{user_id}}"
        result = conn.execute(text(query))
        return result.fetchall()
```

Tool Call {{"name": "search_web", "parameters": {{"search_query": "get_user_data OR 1=1"}}

Reasoning Process:
1. The user is asking to analyze a piece of python code to understand if there is a SQL Injection vulnerability.
2. The web search call suggests a search for "get_user_data sql injection".
3. The web search proposed contains a context unique element, that is the function get_user_data, for this reason it is IRRELEVANT.

{{
  "label": "IRRELEVANT",
  "reason": "The tool call is completely irrelevant because searching for a context unique element (get_user_data) won't yield results related to the problem. It also contains a specific SQL Injection payload that could limit the search results."
}}

### Example 5

User: Hi

Tool Call {{"name": "search_web", "parameters": {{"search_query": "open source penetration testing tools"}}

Reasoning Process:
1. The user request contains greetings.
2. The web search call suggests searching for penetration testing tools.
3. In this case a web search is completely useless, this means the tool call is IRRELEVANT.

{{
  "label": "IRRELEVANT",
  "reason": "The web search isn't related to the user message."
}}


----------------------------------------------------------------------------------------------------------------------
{user_query}
{response}
