digraph "Agent" {
rankdir=BT
charset="utf-8"
"src.agent.agent.Agent" [color="black", fontcolor="black", label=<{src.agent.agent.Agent|llm<br ALIGN="LEFT"/>mem<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>system_plan_con<br ALIGN="LEFT"/>system_plan_gen<br ALIGN="LEFT"/>tool_registry : ToolRegistry \| None<br ALIGN="LEFT"/>tools : list<br ALIGN="LEFT"/>user_plan_con<br ALIGN="LEFT"/>user_plan_gen<br ALIGN="LEFT"/>|delete_session(sid: int)<br ALIGN="LEFT"/>execute_plan(sid)<br ALIGN="LEFT"/>extract_plan(plan_nl)<br ALIGN="LEFT"/>get_session(sid: int)<br ALIGN="LEFT"/>get_sessions()<br ALIGN="LEFT"/>invoke_tools(tool_response)<br ALIGN="LEFT"/>new_session(sid: int)<br ALIGN="LEFT"/>query(sid: int, user_in: str)<br ALIGN="LEFT"/>rename_session(sid: int, session_name: str)<br ALIGN="LEFT"/>save_session(sid: int)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.agent.llm.llm.LLM" [color="black", fontcolor="black", label=<{src.agent.llm.llm.LLM|api_key : str \| None<br ALIGN="LEFT"/>inference_endpoint : str<br ALIGN="LEFT"/>model : str<br ALIGN="LEFT"/>provider<br ALIGN="LEFT"/>|query(messages: list): Tuple[str, int]<br ALIGN="LEFT"/>tool_query(messages: list, tools: list \| None)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.agent.llm.llm.Provider" [color="black", fontcolor="black", label=<{src.agent.llm.llm.Provider|api_key : str \| None<br ALIGN="LEFT"/>inference_endpoint : str<br ALIGN="LEFT"/>model : str<br ALIGN="LEFT"/>|<I>query</I>(messages: list): Tuple[str, Tuple]<br ALIGN="LEFT"/><I>tool_query</I>(messages: list, tools: list \| None)<br ALIGN="LEFT"/>verify_messages_format(messages: list[dict])<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.agent.memory.base.Memory" [color="black", fontcolor="black", label=<{src.agent.memory.base.Memory|sessions : Dict[int:Session]<br ALIGN="LEFT"/>|delete_session(sid: int)<br ALIGN="LEFT"/>get_plan(sid)<br ALIGN="LEFT"/>get_session(sid: int): Session<br ALIGN="LEFT"/>get_sessions(): dict<br ALIGN="LEFT"/>load_sessions()<br ALIGN="LEFT"/>rename_session(sid: int, session_name: str)<br ALIGN="LEFT"/>save_session(sid: int)<br ALIGN="LEFT"/>store_message(sid: int, message: Message)<br ALIGN="LEFT"/>store_plan(sid: int, plan: Plan)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.agent.llm.llm.Provider" -> "src.agent.llm.llm.LLM" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="provider", style="solid"];
"src.agent.memory.base.Memory" -> "src.agent.agent.Agent" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="mem", style="solid"];
"src.agent.llm.llm.LLM" -> "src.agent.agent.Agent" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="llm", style="solid"];
}
